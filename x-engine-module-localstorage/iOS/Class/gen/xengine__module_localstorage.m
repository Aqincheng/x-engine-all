
// DO NOT MODIFY!.
// generated by x-cli, it will be overwrite eventually!


#import "xengine__module_localstorage.h"
#import <micros.h>


@implementation StorageSetDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   
   	return NO;
    }
@end
    
  
@implementation StorageGetDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   	return NO;
    }
@end
    
  
@implementation StorageRemoveDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   	return NO;
    }
@end
    
  
@implementation StorageStatusDTO
    + (BOOL)propertyIsOptional:(NSString *)propertyName {
   	return NO;
    }
@end
    




  @implementation xengine__module_localstorage
    - (instancetype)init
    {
        self = [super init];
        return self;
    }

    - (NSString *)moduleId{
        return @"com.zkty.module.localstorage";
    }
    
    - (void) setLocalStorage:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          StorageSetDTO* dto = [self convert:dict clazz:StorageSetDTO.class];
          [self _setLocalStorage:dto complete:^(StorageStatusDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) getLocalStorage:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          StorageGetDTO* dto = [self convert:dict clazz:StorageGetDTO.class];
          [self _getLocalStorage:dto complete:^(StorageStatusDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) removeLocalStorageItem:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          StorageRemoveDTO* dto = [self convert:dict clazz:StorageRemoveDTO.class];
          [self _removeLocalStorageItem:dto complete:^(StorageStatusDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) removeLocalStorageAll:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          StorageRemoveDTO* dto = [self convert:dict clazz:StorageRemoveDTO.class];
          [self _removeLocalStorageAll:dto complete:^(StorageStatusDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) _testSetOtherIDLocalStorage:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          StorageSetDTO* dto = [self convert:dict clazz:StorageSetDTO.class];
          [self __testSetOtherIDLocalStorage:dto complete:^(StorageStatusDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
    - (void) _testGetOtherIDLocalStorage:(NSDictionary*) dict complete:(XEngineCallBack)completionHandler {

          StorageGetDTO* dto = [self convert:dict clazz:StorageGetDTO.class];
          [self __testGetOtherIDLocalStorage:dto complete:^(StorageStatusDTO* result,  BOOL complete) {
            completionHandler(result,complete);
          }];
        
      }
  @end
